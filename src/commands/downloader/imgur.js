import fs from 'fs';
import path from 'path';
import * as client from 'imgur-anon';
import https from 'https';

import { createDirIfNotExist } from '../../util/file.js';
import { minifyHTML } from '../../util/url.js';

/**
 * Is a url a valid imgur url?
 * @param {string} url URL
 * @return {boolean} is the result imgur
 */
export async function isImgur(url) {
    if (url.endsWith('/')) url = url.substring(0, url.length - 1);
    url = url.toLowerCase();
    return url.startsWith('https://imgur.com/a/') || url.startsWith('https://imgur.com/gallery/');
}

/**
 * Download an album or gallery from imgur
 * @param {string} url URL of album
 * @param {string} dest Destination folder path to save sound and html file
 * @param {string} id Id to save file names as
 */
export async function downloadImgur(url, dest, id) {
    let album = await client.getAlbum(url.split('/').at(-1));
    album = album.data;

    createDirIfNotExist(path.join(dest, 'tmp.tmp'));
    const fileNameFromImg = image => id + '-' + image.id + '.' + image.type.split('/').at(-1);

    for (let image of album.images)
        await https.get(image.link, resp => resp.pipe(fs.createWriteStream(
            path.join(dest, fileNameFromImg(image)))));

    let HTML = `
<!DOCTYPE HTML>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <title>Imgur Backup</title>
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Overpass:wght@300&display=swap" rel="stylesheet">
        <style>
body {
    background: #27292d;
    color: white;
    font-family: "Proxima Nova Regular",
        "Overpass",
        "Helvetica Neue",
        Helvetica,
        Arial,
        sans-serif;
    line-height: 150%;
}
.container {
    max-width: 95%;
    box-sizing: border-box;
    padding: 30px 0;
    width: 700px;
    margin: 0 auto;
}
img, video {
    width: 100%;
    margin: 5px 0;
}
.stats {
    font-size: 0.85rem;
    opacity: 0.8;
}
</style>
    </head>
    <body>
        <div class="container">
            <h1>${album.title || 'No title provided'}</h1>
            <p class="stats"><b>${album.account_url || 'Hidden User'}</b><br>${(new Date(album.datetime * 1000)).toISOString()}</p>
            ${album.description ? `<p>${album.description}</p>` : ''}

            ${album.images.map(x => x.animated ?
        `<video controls loading="lazy">
        <source src="${fileNameFromImg(x)}" type="${x.type}" />
    </video>${x.description ? x.description + '<br><br>' : ''}` :
        `<img loading="lazy" src="${fileNameFromImg(x)}" />${x.description ? x.description + '<br><br>' : ''}`
    ).join('\n')}

            <br><small>This is an imgur backup generated by Hellomouse Apps</small>
        </div>
    </body>
</html>`;
    HTML = minifyHTML(HTML);
    fs.writeFileSync(path.join(dest, id + '.html'), HTML);
}
